using System;
using System.Collections.Generic;

namespace ProjektEuler
{
    // Each new term in the Fibonacci sequence is generated by adding the previous two terms.By starting with 1 and 2, the first 10 terms will be:
    // 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
    // By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
    internal class Problem2
    {
        public static void Ausführen()
        {
            var fibonacci = FibonacciReihe();
            var geradeZahlen = GeradeZahlen(fibonacci);
            var summe = SummeVonListe(geradeZahlen);
            Console.WriteLine($"Die Summe aller geraden Zahlen der Fibonacci-Reihe bis 4.000.000: {summe}");
        }

        private static List<int> FibonacciReihe()
        {
            List<int> liste = new List<int>();
            liste.Add(1);
            liste.Add(2);

            do
            {
                liste.Add(liste[liste.Count - 2] + liste[liste.Count - 1]); // Hinzufügen wenn 4.000.000 noch nicht erreicht sind
            } while (liste[liste.Count - 2] + liste[liste.Count - 1] < 4000000);

            return liste;
        }

        private static List<int> GeradeZahlen(List<int> fibonacci)
        {
            List<int> liste = new List<int>();

            foreach (int i in fibonacci)
            {
                if (i % 2 == 0) // Nur gerade Zahlen in eine Liste hinzufügen
                    liste.Add(i);
            }

            return liste;
        }

        private static int SummeVonListe(List<int> nummern)
        {
            int summe = 0;

            foreach (int i in nummern)
            {
                summe += i;
            }

            return summe;
        }
    }
}
